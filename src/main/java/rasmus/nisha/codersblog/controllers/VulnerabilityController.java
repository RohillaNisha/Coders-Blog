package rasmus.nisha.codersblog.controllers;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.web.bind.annotation.*;
import rasmus.nisha.codersblog.dtos.ReportVulnerabilityDto;
import rasmus.nisha.codersblog.entites.ReportedVulnerabilities;
import rasmus.nisha.codersblog.entites.User;
import rasmus.nisha.codersblog.services.VulnerabilityService;

import java.util.List;

@RestController
@RequestMapping("/api/vulnerability")
@CrossOrigin(origins = {"http://localhost:3000"}, allowCredentials = "true")
public class VulnerabilityController {

    private final VulnerabilityService vulnerabilityService;

    public VulnerabilityController(VulnerabilityService vulnerabilityService) {
        this.vulnerabilityService = vulnerabilityService;
    }


    @GetMapping("/all")
    public ResponseEntity<List<ReportedVulnerabilities>> getAllReports(@AuthenticationPrincipal User user) {
        List<ReportedVulnerabilities> result =  vulnerabilityService.getAllReports();
        return ResponseEntity.ok(result);
    }

    @PostMapping("/add")
    public ResponseEntity<String> reportAVulnerability(@RequestBody ReportVulnerabilityDto reportVulnerabilityDto){
        boolean result = vulnerabilityService.reportAVulnerability(reportVulnerabilityDto);
        if(result) {
            return ResponseEntity.status(HttpStatus.CREATED).body("Vulnerability successfully reported.");
        } else {
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR.ordinal()).body("Something went wrong.");

        }
    }

}
